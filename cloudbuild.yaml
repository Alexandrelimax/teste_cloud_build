steps:
# Etapa 1: Build da nova imagem com uma tag única (hash do commit)
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/my-fastapi-app:$SHORT_SHA', '.']

# Etapa 2: Push da imagem com a tag única
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/my-fastapi-app:$SHORT_SHA']

# Etapa 3: Marcar a nova imagem como "latest"
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/my-fastapi-app:$SHORT_SHA', 'gcr.io/$PROJECT_ID/my-fastapi-app:latest']

# Etapa 4: Push da imagem "latest" para o Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/my-fastapi-app:latest']

# Etapa 5: Recuperar a versão anterior e marcar como vX
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      PREVIOUS_TAG=$(gcloud container images list-tags gcr.io/$PROJECT_ID/my-fastapi-app --limit=2 --sort-by=~TIMESTAMP --format="get(tags)" | sed -n 2p | awk -F, '{print $1}')
      if [ -n "$PREVIOUS_TAG" ]; then
        NEW_VERSION="v$(($(gcloud container images list-tags gcr.io/$PROJECT_ID/my-fastapi-app --format=json | jq '.[].tags' | grep -oP '(?<=v)\d+' | sort -n | tail -1)+1))"
        gcloud container images add-tag "gcr.io/$PROJECT_ID/my-fastapi-app:$PREVIOUS_TAG" "gcr.io/$PROJECT_ID/my-fastapi-app:$NEW_VERSION" --quiet
      fi

# Etapa 6: Deploy no Cloud Run com a imagem "latest"
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
    - 'run'
    - 'deploy'
    - 'my-fastapi-app'
    - '--image'
    - 'gcr.io/$PROJECT_ID/my-fastapi-app:latest'
    - '--region'
    - 'us-central1'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'

# Substituições
substitutions:
  _REGION: 'us-central1'

timeout: '600s'
